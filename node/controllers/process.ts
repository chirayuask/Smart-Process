import { Request, Response } from 'express';
import { Process } from '../models/processSchema';
import { findSteps } from '../utils/generateAISteps';


export const createProcess = async (req: Request, res: Response) => {
    try {

        let document = await Process.findOne({ title: req.body.title });

        if (!document) {
            if(req.body.isAutoGenerated) {
                const steps = await findSteps(req.body.title);
                req.body.steps = steps
            }

            document = await Process.create(req.body);
        }


        return res.status(200).send({
            status: 200,
            success: true,
            message: 'Document created successfully...!!!',
            data: document
        })
    } catch (error) {
        console.log('error', error)
        return res.status(500).send({
            status: 500,
            success: false,
            message: 'Internal Server Error',
            error: error
        })
    }
}
export const getProcesses = async (req: Request, res: Response) => {
    try {
        let document = await Process.find();
        return res.status(200).send({
            status: 200,
            success: true,
            message: 'Document fetched successfully...!!!',
            data: document
        });
    } catch (error) {
        return res.status(500).send({
            status: 500,
            success: false,
            message: 'Internal Server Error',
            error: error
        })
    }
}
export const updateProcesses = async (req: Request, res: Response) => {
    try {
        await Process.findByIdAndUpdate(req.query._id, req.body);
        return res.status(200).send({
            status: 200,
            success: true,
            message: 'Document fetched successfully...!!!',
        });
    } catch (error) {
        return res.status(500).send({
            status: 500,
            success: false,
            message: 'Internal Server Error',
            error: error
        });
    };
};
export const generateAIProcess = async (req: Request, res: Response) => {
    try {
        const { prompt } = req.body;


    } catch (error) {
        return res.status(500).send({
            status: 500,
            success: false,
            message: 'Internal Server Error',
            error: error
        });
    };
};